{"ast":null,"code":"var _jsxFileName = \"/Users/vietqnguyen/Desktop/React/11-react-form/src/components/BasicForm.js\",\n    _s = $RefreshSig$();\n\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BasicForm = props => {\n  _s();\n\n  const {\n    enteredValue: enteredFirstName,\n    hasError: firstNameIsInvalid,\n    isValid: firstNameIsValid,\n    valueChangeHandler: firstNameChangeHandler,\n    valueBlurHandler: firstNameBlurHandler,\n    reset: resetFirstName\n  } = useInput(value => value.trim() !== '');\n  const {\n    enteredValue: enteredLastName,\n    hasError: lastNameIsInvalid,\n    isValid: lastNameIsValid,\n    valueChangeHandler: lastNameChangeHandler,\n    valueBlurHandler: lastNameBlurHandler,\n    reset: resetLastName\n  } = useInput(value => value.trim() !== '');\n  const {\n    enteredValue: enteredEmail,\n    hasError: emailIsInvalid,\n    isValid: emailIsValid,\n    valueChangeHandler: emailChangeHandler,\n    valueBlurHandler: emailBlurHandler,\n    reset: resetEmail\n  } = useInput(value => value.trim() !== '' && value.includes('@'));\n  let formIsValid = false;\n  if (firstNameIsValid && lastNameIsValid && emailIsValid) !formIsValid;\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    if (firstNameIsInvalid || lastNameIsInvalid || emailIsInvalid) return;\n    resetFirstName();\n    resetLastName();\n    resetEmail();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicForm, \"tGwTqFK0N4Inq8Wn3l0J9K7qnoU=\", false, function () {\n  return [useInput, useInput, useInput];\n});\n\n_c = BasicForm;\nexport default BasicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"sources":["/Users/vietqnguyen/Desktop/React/11-react-form/src/components/BasicForm.js"],"names":["useInput","BasicForm","props","enteredValue","enteredFirstName","hasError","firstNameIsInvalid","isValid","firstNameIsValid","valueChangeHandler","firstNameChangeHandler","valueBlurHandler","firstNameBlurHandler","reset","resetFirstName","value","trim","enteredLastName","lastNameIsInvalid","lastNameIsValid","lastNameChangeHandler","lastNameBlurHandler","resetLastName","enteredEmail","emailIsInvalid","emailIsValid","emailChangeHandler","emailBlurHandler","resetEmail","includes","formIsValid","formSubmitHandler","event","preventDefault"],"mappings":"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","sourcesContent":["import useInput from \"../hooks/use-input\";\n\nconst BasicForm = (props) => {\n  const {\n    enteredValue: enteredFirstName,\n    hasError: firstNameIsInvalid,\n    isValid: firstNameIsValid,\n    valueChangeHandler: firstNameChangeHandler,\n    valueBlurHandler: firstNameBlurHandler,\n    reset: resetFirstName\n  } = useInput((value) => value.trim() !== '');\n\n  const {\n    enteredValue: enteredLastName,\n    hasError: lastNameIsInvalid,\n    isValid: lastNameIsValid,\n    valueChangeHandler: lastNameChangeHandler,\n    valueBlurHandler: lastNameBlurHandler,\n    reset: resetLastName\n  } = useInput((value) => value.trim() !== '');\n\n  const {\n    enteredValue: enteredEmail,\n    hasError: emailIsInvalid,\n    isValid: emailIsValid,\n    valueChangeHandler: emailChangeHandler,\n    valueBlurHandler: emailBlurHandler,\n    reset: resetEmail\n  } = useInput((value) => value.trim() !== '' && value.includes('@'));\n\n  let formIsValid = false;\n  if (firstNameIsValid && lastNameIsValid && emailIsValid) !formIsValid;\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n    if (firstNameIsInvalid || lastNameIsInvalid || emailIsInvalid) return;\n    resetFirstName();\n    resetLastName();\n    resetEmail();\n  }\n\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className='control-group'>\n        <div className='form-control'>\n          <label htmlFor='name'>First Name</label>\n          <input type='text' id='name' />\n        </div>\n        <div className='form-control'>\n          <label htmlFor='name'>Last Name</label>\n          <input type='text' id='name' />\n        </div>\n      </div>\n      <div className='form-control'>\n        <label htmlFor='name'>E-Mail Address</label>\n        <input type='text' id='name' />\n      </div>\n      <div className='form-actions'>\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"]},"metadata":{},"sourceType":"module"}