{"ast":null,"code":"var _jsxFileName = \"/Users/vietqnguyen/Desktop/React/11-react-form/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport useInput from '../hooks/use-input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const {\n    value: enteredName,\n    hasError: nameInputIsInvalid,\n    isValid: enteredNameIsValid,\n    valueChangeHandler: nameInputChangeHandler,\n    valueBlurHandler: nameInputBlurHandler,\n    reset: resetNameInput\n  } = useInput(value => value.trim() !== '');\n  const {\n    value: enteredEmail,\n    hasError: emailInputIsInvalid,\n    isValid: enteredEmailIsValid,\n    valueChangeHandler: emailInputChangeHandler,\n    valueBlurHandler: emailInputBlurHandler,\n    reset: resetEmailInput\n  } = useInput(value => value.trim() !== '' && value.includes('@'));\n  let formIsValid = false;\n  if (enteredEmailIsValid && enteredEmailIsValid) formIsValid = true;\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n\n    console.log(enteredName);\n    resetNameInput();\n\n    if (!enteredEmailIsValid) {\n      return;\n    }\n\n    resetEmailInput();\n  };\n\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  const emailInputClasses = emailInputIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        onChange: emailInputChangeHandler,\n        onBlur: emailInputBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), emailInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Please enter a valid email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"lCKcSj+05Qsgm7zPJjMmXATJyqs=\", false, function () {\n  return [useInput, useInput];\n});\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["/Users/vietqnguyen/Desktop/React/11-react-form/src/components/SimpleInput.js"],"names":["useInput","SimpleInput","props","value","enteredName","hasError","nameInputIsInvalid","isValid","enteredNameIsValid","valueChangeHandler","nameInputChangeHandler","valueBlurHandler","nameInputBlurHandler","reset","resetNameInput","trim","enteredEmail","emailInputIsInvalid","enteredEmailIsValid","emailInputChangeHandler","emailInputBlurHandler","resetEmailInput","includes","formIsValid","formSubmissionHandler","event","preventDefault","console","log","nameInputClasses","emailInputClasses"],"mappings":"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","sourcesContent":["import useInput from '../hooks/use-input';\n\nconst SimpleInput = (props) => {\n\n  const {\n    value: enteredName, \n    hasError: nameInputIsInvalid, \n    isValid: enteredNameIsValid,\n    valueChangeHandler: nameInputChangeHandler,\n    valueBlurHandler: nameInputBlurHandler,\n    reset: resetNameInput\n  } = useInput((value) => value.trim() !== '');\n\n  const {\n    value: enteredEmail, \n    hasError: emailInputIsInvalid, \n    isValid: enteredEmailIsValid,\n    valueChangeHandler: emailInputChangeHandler,\n    valueBlurHandler: emailInputBlurHandler,\n    reset: resetEmailInput\n  } = useInput((value) => value.trim() !== '' && value.includes('@'));\n\n  let formIsValid = false;\n    if (enteredEmailIsValid && enteredEmailIsValid) formIsValid = true;\n    \n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n    if (!enteredNameIsValid) {\n      return;\n    }\n    console.log(enteredName);\n    resetNameInput();\n\n    if (!enteredEmailIsValid) {\n      return;\n    }\n    resetEmailInput();\n  };\n\n  \n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  const emailInputClasses = emailInputIsInvalid ? 'form-control invalid' : 'form-control';\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input \n          type='text' \n          id='name' \n          onChange={nameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}\n        />\n        {nameInputIsInvalid && <p className=\"error-text\">Name must not be empty</p>}\n      </div>\n      <div className={emailInputClasses}>\n        <label htmlFor='email'>Your Email</label>\n        <input \n          type='text' \n          id='email' \n          onChange={emailInputChangeHandler}\n          onBlur={emailInputBlurHandler}\n          value={enteredEmail}\n        />\n        {emailInputIsInvalid && <p className=\"error-text\">Please enter a valid email</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}